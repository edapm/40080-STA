myFile <- file.choose()
Infiltration  <- read.csv(myFile,header=TRUE)
summary(Infiltration)
hist(Infiltration$infiltrationrate)
hist(Infiltration$infiltrationrate)
hist(Infiltration$latitude)
hist(Infiltration$infiltrationrate,
main="Histogram for Infiltration rate",
xlab="Infiltration (m/s)",
border="blue",
col="green")
1+1
(exp(28)^-5)/32
Infiltration$logInfiltration <- log10(Infiltration$infiltrationrate)
hist(Infiltration$logInfiltration,
main="Histogram for Log Infiltration rate",
xlab="Log Infiltration (m/s)",
border="blue",
col="green")
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = Infiltration,
aes(longitude,latitude,color=infiltrationrate),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Infiltration", color = "Infiltration rate (m/s)")
RequiredColumns <- c("latitude", "longitude", "logInfiltration")
InfiltrationSubset <- Infiltration[RequiredColumns ]
ggplot() + geom_point(data = InfiltrationSubset,
aes(longitude,latitude,color=logInfiltration),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Infiltration", color = "Infiltration rate (m/s)")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
Infiltration_sf <- st_as_sf(Infiltration, coords = c("longitude", "latitude"), crs = "EPSG:4326")
mapview(Infiltration_sf, zcol = "logInfiltration")
# For your laboratory note book as part of the assignment, export the map of your infiltration
# For your laboratory note book as part of the assignment, export the map of your infiltration
# rate (either log or linear depending on your preference) and present with a Figure caption.
q()
rm(list.ls)
rm(ls)
rm(list=ls())
Long = 523107.1
Lat = 132228.8
Data = [0.002, 0.3, 0.001, 0.00345]
Data = (0.002, 0.3, 0.001, 0.00345)
Data = 0.02
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = Data,
aes(Long,Lat),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data")
rm(list=ls())
myFile <- file.choose()
DataTable  <- read.csv(myFile,header=TRUE)
View(DataTable)
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = DataTable,
aes(longitude,latitude,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c("long", "lat"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
library(mapview)
mapview(DataTable_sf, zcol = "data")
mapview(DataTable_sf, zcol = "data")
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
View(DataTable_sf)
mapview(DataTable_sf, zcol = "data")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c(long, lat), crs = "EPSG:4326")
DataTable  <- read.csv(myFile,header=TRUE)
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
rm(list=ls())
myFile <- file.choose()
DataTable  <- read.csv(myFile,header=TRUE)
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
library(mapview)
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c(long, lat), crs = "EPSG:4326")
DataTable_sf <- st_as_sf(DataTable, coords = c("Longitude", "Latitude"), crs = "EPSG:4326")
DataTable_sf <- st_as_sf(DataTable, coords = c("long", "lat"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
View(DataTable_sf)
rm(list=ls())
myFile <- file.choose()
DataTable  <- read.csv(myFile,header=TRUE)
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
library(mapview)
mapview(DataTable_sf, zcol = "data")
rm(list=ls())
myFile <- file.choose()
DataTable  <- read.csv(myFile,header=TRUE)
library(ggplot2)
library(mapview)
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
rm(list=ls())
myFile <- file.choose()
library(ggplot2)
library(mapview)
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
DataTable  <- read.csv(myFile,header=TRUE)
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
run
source("~/.active-rstudio-document")
rm(list=ls())
myFile <- file.choose()
DataTable  <- read.csv(myFile,header=TRUE)
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
library(mapview)
mapview(DataTable_sf, zcol = "data")
rm(list(ls))
install.packages("airGRteaching")
install.packages("remotes")
remotes::install_github('ramnathv/htmlwidgets')
library(airGRteaching)
## data.frame of observed data of a low-land basin
data(L0123001, package = "airGR")
BV_L0123001 <- BasinObs[0001:6000, c("DatesR", "P", "E", "Qmm", "T")]
BI_L0123001 <- BasinInfo
## data.frame of observed data of a mountainous basin
data(L0123002, package = "airGR")
BV_L0123002 <- BasinObs[5000:9999, c("DatesR", "P", "E", "Qmm", "T")]
BI_L0123002 <- BasinInfo
## Interactive simulation when inputs set by using a data.frame
ShinyGR(ObsDF = list("Low-land basin" = BV_L0123001, "Mountainous basin" = BV_L0123002),
ZInputs = list(NULL, median(BI_L0123002$HypsoData)),
HypsoData = list(NULL, BI_L0123002$HypsoData),
NLayers = list(5, 5),
SimPer = list(c("1994-01-01", "1998-12-31"), c("2004-01-01", "2006-12-31")),
theme = "United")
rm(list=ls())
install.packages("airGRteaching")
install.packages("remotes")
remotes::install_github('ramnathv/htmlwidgets')
force = TRUE
remotes::install_github('ramnathv/htmlwidgets')
library(airGRteaching)
## data.frame of observed data of a low-land basin
data(L0123001, package = "airGR")
BV_L0123001 <- BasinObs[0001:6000, c("DatesR", "P", "E", "Qmm", "T")]
BI_L0123001 <- BasinInfo
## data.frame of observed data of a mountainous basin
data(L0123002, package = "airGR")
BV_L0123002 <- BasinObs[5000:9999, c("DatesR", "P", "E", "Qmm", "T")]
BI_L0123002 <- BasinInfo
## Interactive simulation when inputs set by using a data.frame
ShinyGR(ObsDF = list("Low-land basin" = BV_L0123001, "Mountainous basin" = BV_L0123002),
ZInputs = list(NULL, median(BI_L0123002$HypsoData)),
HypsoData = list(NULL, BI_L0123002$HypsoData),
NLayers = list(5, 5),
SimPer = list(c("1994-01-01", "1998-12-31"), c("2004-01-01", "2006-12-31")),
theme = "United")
rm(list=ls())
myFile <- file.choose()
rm(list=ls())
myFile <- file.choose()
DataTable  <- read.csv(myFile,header=TRUE)
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
ggplot() + geom_point(data = DataTable,
aes(long,lat,color=data),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Data", color = "Color")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
DataTable_sf <- st_as_sf(DataTable, coords = c("lat", "long"), crs = "EPSG:4326")
mapview(DataTable_sf, zcol = "data")
rm(list=ls())
myFile <- file.choose()
Infiltration  <- read.csv(myFile,header=TRUE)
summary(Infiltration)
hist(Infiltration$infiltrationrate)
hist(Infiltration$infiltrationrate)
hist(Infiltration$latitude)
hist(Infiltration$infiltrationrate,
main="Histogram for Infiltration rate",
xlab="Infiltration (m/s)",
border="blue",
col="green")
1+1
(exp(28)^-5)/32
Infiltration$logInfiltration <- log10(Infiltration$infiltrationrate)
hist(Infiltration$logInfiltration,
main="Histogram for Log Infiltration rate",
xlab="Log Infiltration (m/s)",
border="blue",
col="green")
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(data = Infiltration,
aes(longitude,latitude,color=infiltrationrate),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Infiltration", color = "Infiltration rate (m/s)")
RequiredColumns <- c("latitude", "longitude", "logInfiltration")
InfiltrationSubset <- Infiltration[RequiredColumns ]
ggplot() + geom_point(data = InfiltrationSubset,
aes(longitude,latitude,color=logInfiltration),size=5,alpha=0.7) +
labs(x = "Longitude", y = "Latitude",
title="Infiltration", color = "Infiltration rate (m/s)")
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
Infiltration_sf <- st_as_sf(Infiltration, coords = c("longitude", "latitude"), crs = "EPSG:4326")
mapview(Infiltration_sf, zcol = "logInfiltration")
library(mapview)
mapview(Infiltration_sf, zcol = "logInfiltration")
remove(list = ls())
riverwidth<-c(9.4, 5.3, 12.8, 11.6, 10.5, 15.1, 2.4, 5.7, 9.8, 11.6, 10.4, 13.1, 6.7, 9.8, 7.7, 6.7, 9.8, 8.7)
riverwidth
river<-data.frame(riverwidth)
View(river)
View(river)
mean(riverwidth)
mean(river$riverwidth)
median(river$riverwidth)
min(river$riverwidth)
max(river$riverwidth)
min<-min(river$riverwidth)
max<-max(river$riverwidth)
(max+min)/2
(15.1 + 2.4)/2
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
v<-river$riverwidth
getmode(v)
sd(river$riverwidth)
(max-min)
table(river$riverwidth)
1-(3/18)
IQR(river$riverwidth)
summary(river)
install.packages("pastecs") # this is the INSTALL code for the package "pastecs"
library(pastecs)            # this is the LOAD code for the package "pastecs"
stat.desc(river$riverwidth)
options(digits = 3)
stat.desc(river$riverwidth)
heightweight<-read.csv(file.choose(),  header=T, sep=",")
View(heightweight)
str(heightweight)
rm(list=ls())
setwd("~/Documents/University/Geography Degree/STA/Week 1")
heightweight<-read.csv(file.choose(),  header=T, sep=",")
str(heightweight)
library(pastecs)
stat.desc(heightweight$Height)
IQR(heightweight$Height)
IQR(heightweight$Weight)
stat.desc(heightweight$Height)
stat.desc(heightweight$Weight)
## ------------------------------------------------------------------------
hist(heightweight$Height)
## ------------------------------------------------------------------------
hist(heightweight$Weight)
